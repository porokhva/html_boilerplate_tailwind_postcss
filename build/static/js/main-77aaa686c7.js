"use strict";function asyncGeneratorStep(e,t,n,o,r,a,i){try{var c=e[a](i),u=c.value}catch(e){return void n(e)}c.done?t(u):Promise.resolve(u).then(o,r)}function _asyncToGenerator(c){return function(){var e=this,i=arguments;return new Promise(function(t,n){var o=c.apply(e,i);function r(e){asyncGeneratorStep(o,t,n,r,a,"next",e)}function a(e){asyncGeneratorStep(o,t,n,r,a,"throw",e)}r(void 0)})}}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}document.addEventListener("DOMContentLoaded",function(){new SmoothScroll('a[href*="#"]',{speed:300})}),window.onload=function(){var e=window.location.hash;if(e){var r=.01,a=window.pageYOffset,i=e.replace(/[^#]*(.*)/,"$1"),c=document.querySelector("".concat(e)).getBoundingClientRect().top,u=null;requestAnimationFrame(function e(t){null===u&&(u=t);var n=t-u,o=c<0?Math.max(a-n/r,a+c):Math.min(a+n/r,a+c);window.scrollTo(0,o),o!=a+c?requestAnimationFrame(e):location.hash=i})}},function(e,t){"function"==typeof define&&define.amd?define([],function(){return t(e)}):"object"==("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=t(e):e.SmoothScroll=t(e)}("undefined"!=typeof global?global:"undefined"!=typeof window?window:void 0,function(A){function I(){var n={};return Array.prototype.forEach.call(arguments,function(e){for(var t in e){if(!e.hasOwnProperty(t))return;n[t]=e[t]}}),n}function a(e){"#"===e.charAt(0)&&(e=e.substr(1));for(var t,n=String(e),o=n.length,r=-1,a="",i=n.charCodeAt(0);++r<o;){if(0===(t=n.charCodeAt(r)))throw new InvalidCharacterError("Invalid character: the input contains U+0000.");a+=1<=t&&t<=31||127==t||0===r&&48<=t&&t<=57||1===r&&48<=t&&t<=57&&45===i?"\\"+t.toString(16)+" ":128<=t||45===t||95===t||48<=t&&t<=57||65<=t&&t<=90||97<=t&&t<=122?n.charAt(r):"\\"+n.charAt(r)}return"#"+a}function C(){return Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.body.clientHeight,document.documentElement.clientHeight)}function L(e,t,n,o){if(t.emitEvents&&"function"==typeof A.CustomEvent){var r=new CustomEvent(e,{bubbles:!0,detail:{anchor:n,toggle:o}});document.dispatchEvent(r)}}var q={ignore:"[data-scroll-ignore]",header:null,topOnEmptyHash:!0,speed:500,speedAsDuration:!1,durationMax:null,durationMin:null,clip:!0,offset:0,easing:"easeInOutCubic",customEasing:null,updateURL:!0,popstate:!0,emitEvents:!0};return function(o,e){var E,r,w,O,M={cancelScroll:function(e){cancelAnimationFrame(O),O=null,e||L("scrollCancel",E)}};M.animateScroll=function(i,c,e){M.cancelScroll();var u=I(E||q,e||{}),s="[object Number]"===Object.prototype.toString.call(i),t=s||!i.tagName?null:i;if(s||t){var l=A.pageYOffset;u.header&&!w&&(w=document.querySelector(u.header));var n,o,r,f,a,d,m,h,p=function(e){return e?(t=e,parseInt(A.getComputedStyle(t).height,10)+e.offsetTop):0;var t}(w),y=s?i:function(e,t,n,o){var r=0;if(e.offsetParent)for(;r+=e.offsetTop,e=e.offsetParent;);return r=Math.max(r-t-n,0),o&&(r=Math.min(r,C()-A.innerHeight)),r}(t,p,parseInt("function"==typeof u.offset?u.offset(i,c):u.offset,10),u.clip),g=y-l,v=C(),S=0,b=(n=g,r=(o=u).speedAsDuration?o.speed:Math.abs(n/1e3*o.speed),o.durationMax&&r>o.durationMax?o.durationMax:o.durationMin&&r<o.durationMin?o.durationMin:parseInt(r,10));0===A.pageYOffset&&A.scrollTo(0,0),m=i,h=u,s||history.pushState&&h.updateURL&&history.pushState({smoothScroll:JSON.stringify(h),anchor:m.id},document.title,m===document.documentElement?"#top":"#"+m.id),"matchMedia"in A&&A.matchMedia("(prefers-reduced-motion)").matches?A.scrollTo(0,Math.floor(y)):(L("scrollStart",u,i,c),M.cancelScroll(!0),A.requestAnimationFrame(function e(t){var n,o,r;S+=t-(f=f||t),d=l+g*(o=a=1<(a=0===b?0:S/b)?1:a,"easeInQuad"===(n=u).easing&&(r=o*o),"easeOutQuad"===n.easing&&(r=o*(2-o)),"easeInOutQuad"===n.easing&&(r=o<.5?2*o*o:(4-2*o)*o-1),"easeInCubic"===n.easing&&(r=o*o*o),"easeOutCubic"===n.easing&&(r=--o*o*o+1),"easeInOutCubic"===n.easing&&(r=o<.5?4*o*o*o:(o-1)*(2*o-2)*(2*o-2)+1),"easeInQuart"===n.easing&&(r=o*o*o*o),"easeOutQuart"===n.easing&&(r=1- --o*o*o*o),"easeInOutQuart"===n.easing&&(r=o<.5?8*o*o*o*o:1-8*--o*o*o*o),"easeInQuint"===n.easing&&(r=o*o*o*o*o),"easeOutQuint"===n.easing&&(r=1+--o*o*o*o*o),"easeInOutQuint"===n.easing&&(r=o<.5?16*o*o*o*o*o:1+16*--o*o*o*o*o),n.customEasing&&(r=n.customEasing(o)),r||o),A.scrollTo(0,Math.floor(d)),function(e,t){var n,o,r,a=A.pageYOffset;if(e==t||a==t||(l<t&&A.innerHeight+a)>=v)return M.cancelScroll(!0),o=t,r=s,0===(n=i)&&document.body.focus(),r||(n.focus(),document.activeElement!==n&&(n.setAttribute("tabindex","-1"),n.focus(),n.style.outline="none"),A.scrollTo(0,o)),L("scrollStop",u,i,c),!(O=f=null)}(d,y)||(O=A.requestAnimationFrame(e),f=t)}))}};function t(e){if(!e.defaultPrevented&&!(0!==e.button||e.metaKey||e.ctrlKey||e.shiftKey)&&"closest"in e.target&&(r=e.target.closest(o))&&"a"===r.tagName.toLowerCase()&&!e.target.closest(E.ignore)&&r.hostname===A.location.hostname&&r.pathname===A.location.pathname&&/#/.test(r.href)){var t,n;try{t=a(decodeURIComponent(r.hash))}catch(e){t=a(r.hash)}if(console.log(t),"#"===t){if(!E.topOnEmptyHash)return;n=document.documentElement}else n=document.querySelector(t);(n=n||"#top"!==t?n:document.documentElement)&&(e.preventDefault(),function(e){if(history.replaceState&&e.updateURL&&!history.state){var t=A.location.hash;t=t||"",history.replaceState({smoothScroll:JSON.stringify(e),anchor:t||A.pageYOffset},document.title,t||A.location.href)}}(E),M.animateScroll(n,r))}}function n(e){if(null!==history.state&&history.state.smoothScroll&&history.state.smoothScroll===JSON.stringify(E)){var t=history.state.anchor;"string"==typeof t&&t&&!(t=document.querySelector(a(history.state.anchor)))||M.animateScroll(t,null,{updateURL:!1})}}return M.destroy=function(){E&&(document.removeEventListener("click",t,!1),A.removeEventListener("popstate",n,!1),M.cancelScroll(),O=w=r=E=null)},function(){if(!("querySelector"in document&&"addEventListener"in A&&"requestAnimationFrame"in A&&"closest"in A.Element.prototype))throw"Smooth Scroll: This browser does not support the required JavaScript methods and browser APIs.";M.destroy(),E=I(q,e||{}),w=E.header?document.querySelector(E.header):null,document.addEventListener("click",t,!1),E.updateURL&&E.popstate&&A.addEventListener("popstate",n,!1)}(),M}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
